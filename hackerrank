https://www.hackerrank.com/challenges/compare-the-triplets/problem?isFullScreen=true

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;


public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      int size = 3;
      int[] Aarr;
      int[] Barr;
      int Acount = 0, Bcount = 0;
      Aarr = new int[size];
      Barr = new int[size];
      for (int i = 0; i < Aarr.length; i++) {
        Aarr[i] = in.nextInt();
      }
      for (int i = 0; i < Barr.length; i++) {
          Barr[i] = in.nextInt();
      }
      for (int i = 0; i < size; i++) {
          if (Aarr[i] > Barr[i]) Acount++;
          else if (Barr[i] > Aarr[i]) Bcount++;
      }
      System.out.print(Acount + " " + Bcount);
    }
}



import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;



https://www.hackerrank.com/challenges/a-very-big-sum/problem?isFullScreen=true
public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      int n ;
      n = in.nextInt();
      long sum = 0;
      long[] arr;
        // allocating memory for 5 integers.
      arr = new long[n];
      //read all integers of array using for loop 
      for(int i = 0 ;i<n;i++){
          arr[i] = in.nextLong(); //reading arr elements
          sum += arr[i]; //calculate sum of arr elements
      }
      System.out.println(sum);
      
    }
}



https://www.hackerrank.com/challenges/diagonal-difference/problem

public class MyClass {
    public static void main(String args[]) {
      
      Scanner in = new Scanner(System.in);
      int size ;  //size of square matrix
      int c1 = 0 , c2 = 0;
      int[][] arr; //init array
      size = in.nextInt(); //reading size of array
      arr = new int[size][size]; //create array
      for (int i = 0; i < size; i++) {
          for (int j = 0; j < size; j++) {
              arr[i][j] = in.nextInt(); 
              if ( i+1 == j+1) c1 += arr[i][j];
              if (i+j+2 == size + 1)  c2 += arr[i][j];
          }
      }
      System.out.println(Math.abs(c1 - c2));
    }
}



https://www.hackerrank.com/challenges/plus-minus/problem
public class MyClass {
    
    public static void main(String args[]) {
      
      Scanner in = new Scanner(System.in);
      int size;
      size = in.nextInt();
      int[] A;
      A = new int[size];
      int P = 0 , N = 0 , O = 0;
      for (int i = 0; i < A.length; i++) {
            A[i] = in.nextInt();
            if (A[i] > 0) P++;
            else if (A[i] < 0) N++;
            else O++;
        }
      System.out.println((float)P/size);
      System.out.println((float)N/size);
      System.out.println((float)O/size);   
    }
}


https://www.hackerrank.com/challenges/staircase/problem
     #
    ##
   ###
  ####
 #####
######

public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      int N;
      N = in.nextInt();
      for (int i = 0; i < N; i++) {
          for (int j = 0; j < N - i - 1; j++) {
              System.out.print(" ");
          }
          for (int j = 0; j < i + 1; j++) {
              System.out.print("#");              
          }
          System.out.println();
      }
    }
}

https://www.hackerrank.com/challenges/mini-max-sum/problem

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.util.Arrays;

public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      int n = 5; //size of array
      long[] A = new long[n];
      long Max = 0 , Min = 0;
      for (int i = 0; i < n; i++) {
          A[i] = in.nextLong();
      }
      Arrays.sort(A);
      for (int i = 0; i < n; i++) {
          if (i != n -1) {
              Min += A[i];
          }
          if (i != 0) {
              Max += A[i];
          }
      }
      System.out.println(Min + " " + Max);
    }
}


https://www.hackerrank.com/challenges/birthday-cake-candles/problem

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;


public class MyClass {
    public static void main(String args[]) {
      Scanner in = new Scanner(System.in);
      int n = in.nextInt();
      int[] candles = new int[n];
      int Max = 0 , Count = 0;
      for (int i = 0; i < candles.length; i++) {
          candles[i] = in.nextInt();
          if (candles[i] > Max) {
              Max = candles[i];
              Count = 1;
          }
          else if (candles[i] == Max) Count++;
      }
      System.out.println(Count);
    }
}



import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

https://www.hackerrank.com/challenges/time-conversion/problem?isFullScreen=true

public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      String S = in.next();
      String Indicator = S.substring(8,10);
      String Hour = S.substring(0,2);
      int Hr = Integer.parseInt(Hour);
      if (Indicator.equals("PM") && Hr != 12) {
          Hr = Hr + 12;
          System.out.println(Hr + S.substring(2,8));
      }
      else if (Indicator.equals("PM") && Hr == 12){
          System.out.println(S.substring(0,8));
      }      
      else if (Indicator.equals("AM") && Hr == 12){
          System.out.println("00"+S.substring(2,8));
      }
      else {
          System.out.println(S.substring(0,8));
      }
    }
}



import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;


public class MyClass {
    public static void main(String args[]) {
      
      
      Scanner in = new Scanner(System.in);
      int n ;
      n = in.nextInt();
      int[] A = new int[n];
      for (int i = 0; i < A.length; i++) {
          A[i] = in.nextInt();
          if (A[i] < 38) continue;
          else {
              int Quotientof5 = A[i] / 5;
              int nextMultipleof5 = (Quotientof5 + 1) * 5;
              int diff = nextMultipleof5 - A[i];
              if ( diff < 3) A[i] = nextMultipleof5;
          }
      }
      for (Integer num: A) {
          System.out.println(num);
      }
    }
}


